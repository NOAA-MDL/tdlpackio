import pytest
import tdlpackio

SQ_INVENTORY = ['0:d=2017020100:001000008 000001000 000000000 0000000000:  0-HR FCST:1000 MB HGT GFS',
 '1:d=2017020100:001000008 000000975 000000000 0000000000:  0-HR FCST: 975 MB HGT GFS',
 '2:d=2017020100:001000008 000000950 000000000 0000000000:  0-HR FCST: 950 MB HGT GFS',
 '3:d=2017020100:001000008 000000925 000000000 0000000000:  0-HR FCST: 925 MB HGT GFS',
 '4:d=2017020100:001000008 000000900 000000000 0000000000:  0-HR FCST: 900 MB HGT GFS',
 '5:d=2017020100:001000008 000000850 000000000 0000000000:  0-HR FCST: 850 MB HGT GFS',
 '6:d=2017020100:001000008 000000800 000000000 0000000000:  0-HR FCST: 800 MB HGT GFS',
 '7:d=2017020100:001000008 000000750 000000000 0000000000:  0-HR FCST: 750 MB HGT GFS',
 '8:d=2017020100:001000008 000000700 000000000 0000000000:  0-HR FCST: 700 MB HGT GFS',
 '9:d=2017020100:001000008 000000600 000000000 0000000000:  0-HR FCST: 600 MB HGT GFS',
 '10:d=2017020100:001000008 000000500 000000000 0000000000:  0-HR FCST: 500 MB HGT GFS',
 '11:d=2017020100:001000008 000000300 000000000 0000000000:  0-HR FCST: 300 MB HGT GFS',
 '12:d=2017020100:001100008 000000000 000000000 0000000000:  0-HR FCST:SFC PRES GFS',
 '13:d=2017020100:001200008 000000000 000000000 0000000000:  0-HR FCST:MSL(STND) PRES GFS',
 '14:d=2017020100:002000008 000001000 000000000 0000000000:  0-HR FCST:1000 MB TEMP GFS',
 '15:d=2017020100:002000008 000000975 000000000 0000000000:  0-HR FCST: 975 MB TEMP GFS',
 '16:d=2017020100:002000008 000000950 000000000 0000000000:  0-HR FCST: 950 MB TEMP GFS',
 '17:d=2017020100:002000008 000000925 000000000 0000000000:  0-HR FCST: 925 MB TEMP GFS',
 '18:d=2017020100:002000008 000000900 000000000 0000000000:  0-HR FCST: 900 MB TEMP GFS',
 '19:d=2017020100:002000008 000000850 000000000 0000000000:  0-HR FCST: 850 MB TEMP GFS',
 '20:d=2017020100:002000008 000000800 000000000 0000000000:  0-HR FCST: 800 MB TEMP GFS',
 '21:d=2017020100:002000008 000000750 000000000 0000000000:  0-HR FCST: 750 MB TEMP GFS',
 '22:d=2017020100:002000008 000000700 000000000 0000000000:  0-HR FCST: 700 MB TEMP GFS',
 '23:d=2017020100:002000008 000000600 000000000 0000000000:  0-HR FCST: 600 MB TEMP GFS',
 '24:d=2017020100:002000008 000000500 000000000 0000000000:  0-HR FCST: 500 MB TEMP GFS',
 '25:d=2017020100:002000008 000000300 000000000 0000000000:  0-HR FCST: 300 MB TEMP GFS',
 '26:d=2017020100:002007008 000000970 000000000 0000000000:  0-HR FCST: B.L.(30 MB) TEMP GFS',
 '27:d=2017020100:002001008 000000002 000000000 0000000000:  0-HR FCST: 2 M TEMP GFS',
 '28:d=2017020100:003000008 000001000 000000000 0000000000:  0-HR FCST:1000 MB RH GFS',
 '29:d=2017020100:003000008 000000975 000000000 0000000000:  0-HR FCST: 975 MB RH GFS',
 '30:d=2017020100:003000008 000000950 000000000 0000000000:  0-HR FCST: 950 MB RH GFS',
 '31:d=2017020100:003000008 000000925 000000000 0000000000:  0-HR FCST: 925 MB RH GFS',
 '32:d=2017020100:003000008 000000900 000000000 0000000000:  0-HR FCST: 900 MB RH GFS',
 '33:d=2017020100:003000008 000000850 000000000 0000000000:  0-HR FCST: 850 MB RH GFS',
 '34:d=2017020100:003000008 000000800 000000000 0000000000:  0-HR FCST: 800 MB RH GFS',
 '35:d=2017020100:003000008 000000750 000000000 0000000000:  0-HR FCST: 750 MB RH GFS',
 '36:d=2017020100:003000008 000000700 000000000 0000000000:  0-HR FCST: 700 MB RH GFS',
 '37:d=2017020100:003000008 000000600 000000000 0000000000:  0-HR FCST: 600 MB RH GFS',
 '38:d=2017020100:003000008 000000500 000000000 0000000000:  0-HR FCST: 500 MB RH GFS',
 '39:d=2017020100:003000008 000000300 000000000 0000000000:  0-HR FCST: 300 MB RH GFS',
 '40:d=2017020100:003007008 000000970 000000000 0000000000:  0-HR FCST: B.L.(30 MB) RH GFS',
 '41:d=2017020100:003001008 000000002 000000000 0000000000:  0-HR FCST: 2 M RH GFS',
 '42:d=2017020100:003002008 000000440 000000000 0000000000:  0-HR FCST:MEAN RH(1.-.44SGY) GFS',
 '43:d=2017020100:004000008 000001000 000000000 0000000000:  0-HR FCST:1000 MB U GRD GFS',
 '44:d=2017020100:004000008 000000975 000000000 0000000000:  0-HR FCST: 975 MB U GRD GFS',
 '45:d=2017020100:004000008 000000950 000000000 0000000000:  0-HR FCST: 950 MB U GRD GFS',
 '46:d=2017020100:004000008 000000925 000000000 0000000000:  0-HR FCST: 925 MB U GRD GFS',
 '47:d=2017020100:004000008 000000900 000000000 0000000000:  0-HR FCST: 900 MB U GRD GFS',
 '48:d=2017020100:004000008 000000850 000000000 0000000000:  0-HR FCST: 850 MB U GRD GFS',
 '49:d=2017020100:004000008 000000800 000000000 0000000000:  0-HR FCST: 800 MB U GRD GFS',
 '50:d=2017020100:004000008 000000750 000000000 0000000000:  0-HR FCST: 750 MB U GRD GFS',
 '51:d=2017020100:004000008 000000700 000000000 0000000000:  0-HR FCST: 700 MB U GRD GFS',
 '52:d=2017020100:004000008 000000600 000000000 0000000000:  0-HR FCST: 600 MB U GRD GFS',
 '53:d=2017020100:004000008 000000500 000000000 0000000000:  0-HR FCST: 500 MB U GRD GFS',
 '54:d=2017020100:004000008 000000300 000000000 0000000000:  0-HR FCST: 300 MB U GRD GFS',
 '55:d=2017020100:004020008 000000010 000000000 0000000000:  0-HR FCST: 10 M U GRD GFS',
 '56:d=2017020100:004040008 000000010 000000000 0000000000:  0-HR FCST: TROP U GRD GFS',
 '57:d=2017020100:004100008 000001000 000000000 0000000000:  0-HR FCST:1000 MB V GRD GFS',
 '58:d=2017020100:004100008 000000975 000000000 0000000000:  0-HR FCST: 975 MB V GRD GFS',
 '59:d=2017020100:004100008 000000950 000000000 0000000000:  0-HR FCST: 950 MB V GRD GFS',
 '60:d=2017020100:004100008 000000925 000000000 0000000000:  0-HR FCST: 925 MB V GRD GFS',
 '61:d=2017020100:004100008 000000900 000000000 0000000000:  0-HR FCST: 900 MB V GRD GFS',
 '62:d=2017020100:004100008 000000850 000000000 0000000000:  0-HR FCST: 850 MB V GRD GFS',
 '63:d=2017020100:004100008 000000800 000000000 0000000000:  0-HR FCST: 800 MB V GRD GFS',
 '64:d=2017020100:004100008 000000750 000000000 0000000000:  0-HR FCST: 750 MB V GRD GFS',
 '65:d=2017020100:004100008 000000700 000000000 0000000000:  0-HR FCST: 700 MB V GRD GFS',
 '66:d=2017020100:004100008 000000600 000000000 0000000000:  0-HR FCST: 600 MB V GRD GFS',
 '67:d=2017020100:004100008 000000500 000000000 0000000000:  0-HR FCST: 500 MB V GRD GFS',
 '68:d=2017020100:004100008 000000300 000000000 0000000000:  0-HR FCST: 300 MB V GRD GFS',
 '69:d=2017020100:004120008 000000010 000000000 0000000000:  0-HR FCST: 10 M V GRD GFS',
 '70:d=2017020100:004140008 000000010 000000000 0000000000:  0-HR FCST: TROP V GRD GFS',
 '71:d=2017020100:005000008 000001000 000000000 0000000000:  0-HR FCST:1000 MB VV GFS',
 '72:d=2017020100:005000008 000000975 000000000 0000000000:  0-HR FCST: 975 MB VV GFS',
 '73:d=2017020100:005000008 000000950 000000000 0000000000:  0-HR FCST: 950 MB VV GFS',
 '74:d=2017020100:005000008 000000925 000000000 0000000000:  0-HR FCST: 925 MB VV GFS',
 '75:d=2017020100:005000008 000000900 000000000 0000000000:  0-HR FCST: 900 MB VV GFS',
 '76:d=2017020100:005000008 000000850 000000000 0000000000:  0-HR FCST: 850 MB VV GFS',
 '77:d=2017020100:005000008 000000800 000000000 0000000000:  0-HR FCST: 800 MB VV GFS',
 '78:d=2017020100:005000008 000000750 000000000 0000000000:  0-HR FCST: 750 MB VV GFS',
 '79:d=2017020100:005000008 000000700 000000000 0000000000:  0-HR FCST: 700 MB VV GFS',
 '80:d=2017020100:005000008 000000600 000000000 0000000000:  0-HR FCST: 600 MB VV GFS',
 '81:d=2017020100:005000008 000000500 000000000 0000000000:  0-HR FCST: 500 MB VV GFS',
 '82:d=2017020100:005000008 000000300 000000000 0000000000:  0-HR FCST: 300 MB VV GFS',
 '83:d=2017020100:004251008 000000000 000000000 0000000000:  0-HR FCST:SFC GUST WIND-SPEED GFS',
 '84:d=2017020100:001030008 000000000 000000000 0000000000:  0-HR FCST:SFC PBL HEIGHT GFS',
 '85:d=2017020100:003350008 000000000 000000000 0000000000:  0-HR FCST:TOTAL P. WATER GFS',
 '86:d=2017020100:007002008 000000000 000000000 0000000000:  0-HR FCST:BEST LI(4BDY) GFS',
 '87:d=2017020100:007010008 000000000 000000000 0000000000:  0-HR FCST:SFC LI GFS',
 '88:d=2017020100:007100008 000000000 000000000 0000000000:  0-HR FCST:SFC CAPE GFS',
 '89:d=2017020100:007120008 000000000 000000000 0000000000:  0-HR FCST:SFC CIN GFS',
 '90:d=2017020100:008400008 000000000 000000000 0000000000:  0-HR FCST:WATER EQIV ACCUM SNOW DEPTH GFS',
 '91:d=2017020100:006208008 000000003 000000000 0000000000:  0-HR FCST:STRM REL HELICITY (0-3KM) GFS',
 '92:d=2017020100:005006008 000000995 000000000 0000000000:  0-HR FCST:995 SIG VV GFS',
 '93:d=2017020100:003708008 000000010 000000000 0000000000:  0-HR FCST:VOL SOIL MOIST 0-.1M BGL GFS',
 '94:d=2017020100:003708008 000000040 000000000 0000000000:  0-HR FCST:VOL SOIL MOIST .1-.4M BGL GFS',
 '95:d=2017020100:003708008 000000100 000000000 0000000000:  0-HR FCST:VOL SOIL MOIST .4-1.M BGL GFS',
 '96:d=2017020100:002031008 000000002 000000003 0000000000:  3-HR FCST:3-H MAX TEMP GFS',
 '97:d=2017020100:002041008 000000002 000000003 0000000000:  3-HR FCST:3-H MIN TEMP GFS',
 '98:d=2017020100:003205008 000000000 000000003 0000000000:  3-HR FCST:3-H TOTAL PRECIP GFS',
 '99:d=2017020100:003235008 000000000 000000003 0000000000:  3-HR FCST:3-H CONV PRECIP GFS']

RA_INVENTORY = ['0:d=1970010100:400350000 000000000 000000000 0000000000:  0-HR FCST:CONUS Land/Water Mask (v2.4.1)',
 '1:d=1970010100:409350000 000000000 000000000 0000000000:  0-HR FCST:CONUS Terrain Elevation (v2.4)',
 '2:d=1970010100:400359000 000000000 000000000 0000000000:  0-HR FCST:CONUS Clipping Mask (v2.4)',
 '3:d=1970010100:400358000 000000000 000000000 0000000000:  0-HR FCST:CONUS Computational Mask (v2.4)',
 '4:d=1970010100:400356000 000000000 000000000 0000000000:  0-HR FCST:CONUS Snow Clipping Mask (v2.4)',
 '5:d=1970010100:409353000 000000000 000000000 0000000000:  0-HR FCST:CONUS Land Proximity Mask (v2.4.',
 '6:d=1970010100:400351000 000000000 000000000 0000000000:  0-HR FCST:CONUS Binary Land/Water Mask (v2']

def test_sequential_file_inventory(request):
    data = request.config.rootdir / 'sampledata'
    test_inventory = []
    with tdlpackio.open(data / 'gfspkd47.2017020100.sq' ) as f:
        for rec in f:
            test_inventory.append(rec.__str__())
    assert test_inventory == SQ_INVENTORY

def test_randomaccess_file_inventory(request):
    data = request.config.rootdir / 'sampledata'
    test_inventory = []
    with tdlpackio.open(data / 'blend.analysisgrconst.co.ra' ) as f:
        for rec in f:
            test_inventory.append(rec.__str__())
    assert test_inventory == RA_INVENTORY
